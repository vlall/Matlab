%% This an OBJECT script and is 2 Categories, all timed on 170ms

function [CAT] = objCat2A(sub)
trials = 128;
CAT.curDir = cd; 
% Categoization script Draft
global rootDir
rootDir = pwd;

fprintf ('Script active:\n' );
fprintf('*** Object Categoization ***\n');
pause(.7);
fprintf('Version 2A\n');
fprintf('June 2, 2014\n');
pause(.4);
fprintf('Script Written by Vishal Lall\nThis an OBJECT script and is 2 Categories\n\n');
pause(3);

%% Control Panel
fprintf('Looking for stimuli...\n');
if exist('objStim.mat')
    load objMasks.mat;
    load objStim.mat;
    fprintf('Stimuli loaded!\n');
else
    fprintf('Please run makeStims first.\n');
    return;
end;

%***Timing Variables***
fixTime = 2.0;
imageTime = .170;
maskTime = .5;
startTime=GetSecs;

%KeyBoard Variabls
KbName('UnifyKeyNames');
%%%%%targetKey = KbName('b');
escapeKey = KbName('q');
triggerKey = KbName('t');
butOne = KbName('1!');
butTwo = KbName('2@');
butThree = KbName('9(');
butFour = KbName('0)');

%View Variables
screens = Screen('Screens');
screenNumber = min(screens);
screenWidth = 412.75;
viewingDistance = 920.75;
visualAngle = 8;

%Answer Variables
correct=0;
incorrect=0;

% Matrix for experiment, randomly generated by doing: 
foo(:,1)=1:128;
foo(:,2)=[1:32 1:32 1:32 1:32];
foo(:,3)=mod(randperm(128),4)+1;
foo(:,4)=randperm(128);
foo(1:64,3)=1;
foo(65:128,3)=4;
foo(:,5)=mod(randperm(128),3)+1;
design = sortrows(foo,4)
% The above code creates a matrix similar to this
% design = [...
%    164    36     3     1    0;
%    141    13     2     2    2;
%    110    46     2     3    3;

backgroundcolor = 128;  
screenid = max(Screen('Screens'));
res = Screen('Resolution', screenNumber);
resWidth = res.width;

PPD = tand(.5).*2.*viewingDistance.*(resWidth./screenWidth);
visualAngle = PPD*visualAngle;
stimSize = visualAngle;
numStimSets = size(STIMS,2);
imgsPerSet = size(STIMS{1},2);
numStimSets2 = size(STIMS2,2);
imgsPerSet2 = size(STIMS2{1},2);

subString = num2str(sub);
%% Make text file for data
temp=fopen([ strcat(subString, '-Obj-Results(LONG).txt') ],'wt');
results=fopen([ strcat(subString, '-Obj-Results(SHORT).txt')],'wt');
excel=fopen([ strcat(subString, '-Obj-Csv.csv')],'wt');

%% PTB Setup
Screen('Preference', 'SkipSyncTests', 2);
[w rect xMid yMid] = startPTB(screenNumber, 1, [128 128 128]);
HideCursor;
%% Create Stimuli & Preallocate
center = [xMid-(stimSize/2) yMid-(stimSize/2) xMid+(stimSize/2) yMid+(stimSize/2)];
for set = 1:numStimSets
    for img = 1:imgsPerSet
        %Making the cell array
        tex{set}{img} = Screen('MakeTexture', w, STIMS{set}{img});
    end;
end;

for set = 1:numStimSets2
    for img = 1:imgsPerSet2
        %Making the cell array
        tex{set}{img} = Screen('MakeTexture', w, STIMS2{set}{img});
    end;
end;

DrawFormattedText(w, 'Waiting for trigger...', 'center', 'center');
Screen('Flip', w);
trigger(triggerKey);
Screen('Flip', w);

for i = 1:trials
    % Fixate for w time
    tic
    fixate(w);
    WaitSecs(fixTime-toc);
    
    % Load image up by index # from design matrix, display it here for 128(stimTime) ms
    imageNum = design(i,2);
    category = design(i,3);
    tic;
    % Load (category, 'image_000' + imageNum + '.jpg');
    Screen('DrawTexture', w, tex{category}{imageNum}, [], [center] );
    Screen('Flip', w);
    WaitSecs(imageTime - toc);
    
    % Load mask up from random number between 1:8 and display it here for
    maskNum = randi([1, 8]);
    folderNum = 1;
    tic;
    % load (folderNum, 'image_000' + maskNum + '.jpg');
    Screen('DrawTexture', w, tex{folderNum}{maskNum}, [], [center] );
    Screen('Flip', w);
   	% 500(maskTime) ms.
    WaitSecs(maskTime - toc);
    
    % Display Text: "What Image did you see?" 
    Screen('TextSize',w, 35);
    Screen('TextStyle', w, 1);
    DrawFormattedText(w, 'Please indicate the image category you saw.\n\n 1 for Cameras\n 0 for Shoes', 'center', 'center', 0);
    Screen('Flip', w);

    % Allow response to be triggered by KeyIsDown translating to a scene
    % category in the Design Matrix.
    
    touch = 0;
    while ~touch
        [touch, ~, keyCode] = KbCheck(-1);
        if touch && ~keyCode(triggerKey)
            UserAns = find(keyCode);
            break;
        end;
    end;
    if UserAns == butOne
        choice = 1;
%     elseif UserAns == butTwo
%         choice = 2;
%     elseif UserAns == butThree
%         choice = 3;
    elseif UserAns == butFour
        choice = 4;
    else
        choice = 0;
    end;
        
    if choice == category
        fprintf(temp, 'Subject ID:%s\n Trial #: %d \n Image Number:%d\n Subject Guess:%d\n Image Category:%d\n Answer is Correct!\n\n', subString, i, imageNum, choice, category)
        %write to text file "Answer #x is correct
        correct=correct+1;
    else
        fprintf(temp, 'Subject ID:%s \n Trial #: %d \n Image Number:%d\n Subject Guess:%d\n Image Category:%d\n Answer is Incorrect!\n\n', subString, i, imageNum, choice, category)
        incorrect=incorrect+1;

    end;
    UserAns = 0; 
    choice = 0; 
    
%% Log array to text file, along with answer information.
percentCorrect = (correct/(correct+incorrect)) * 100;
timeNow = GetSecs;
endTime = timeNow - startTime;
fprintf(results, 'Correct:%d\n Incorrect:%d\n Elapsed Time:%d \n Percent Correct:%1.3f%% \n\n', correct,incorrect, endTime,percentCorrect);
fprintf('Percent Correct:%1.3f%% \n', percentCorrect);
fprintf('Timing Variable: %f Seconds', imageTime);
fprintf(excel, '%d, %1.3f\n', i,percentCorrect);

end;    
% Quit
    
%% Shutdown Procedures
ShowCursor;
Screen('CloseAll');
fclose(temp);
fclose(results);

%% Sam's Functions
function [w rect xc yc] = startPTB(screenNumber, oGl, color)
if nargin == 0
    oGl = 0;
    color = [0 0 0];
elseif nargin == 1;
    color = [0 0 0];
end;

[w rect] = Screen('OpenWindow', screenNumber, color);
xc = rect(3)/2;
yc = rect(4)/2;

if oGl == 1
    AssertOpenGL;
    Screen('BlendFunction', w, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, [1 1 1 1]);
end;

function fixate(w)
Screen('TextSize', w, 40);
DrawFormattedText(w, '+', 'center', 'center', [200 200 200]);
Screen('TextSize', w, 25);
Screen('Flip', w);

function flipNwait(w)
Screen('Flip', w);
WaitSecs(.3);
KbCheck(-1);

function trigger(triggerKey)
KbName('UnifyKeyNames');

touch = 0;
go = 0;
while go == 0
    [touch, secs, keyCode] = KbCheck;
    WaitSecs(.0001);
    if touch && keyCode(triggerKey)
        go = 1;
    end;
end;
